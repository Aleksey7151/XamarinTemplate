# Xamarin.Android and Xamarin.iOS
# Build a Xamarin.Android and Xamarin.iOS app.
# Add steps that test, sign, and distribute the app, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/xamarin

jobs:

- job: Android
  pool:
    vmImage: 'VS2017-Win2016'

  variables:
    buildConfiguration: 'Release'
    outputDirectory: '$(build.binariesDirectory)/$(buildConfiguration)'

  steps:
  - task: NuGetToolInstaller@0

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'

  - task: XamarinAndroid@1
    inputs:
      projectFile: '**/*droid*.csproj'
      outputDirectory: '$(outputDirectory)'
      configuration: '$(buildConfiguration)'

  - task: AndroidSigning@3
    inputs:
      apksign: false
      zipalign: false
      apkFiles: '$(outputDirectory)/*.apk'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(outputDirectory)'
      
  - task: DownloadSecureFile@1
    inputs:
      secureFile: MobileAppAlias.keystore
      
  - task: AndroidSigning@2
    inputs:
      apkFiles: '**/*.apk'
      jarsign: true
      jarsignerKeystoreFile: MobileAppAlias.keystore
      jarsignerKeystorePassword: $(keystorePass)
      jarsignerKeystoreAlias: XamarinTemplateAlias
      jarsignerKeyPassword: $(keystorePass)
      zipalign: true

- job: iOS
  pool:
    vmImage: 'macOS 10.13'

  steps:
  - task: NuGetToolInstaller@0

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'

  - task: XamariniOS@2
    inputs:
      solutionFile: '**/*.sln'
      configuration: 'Release'
      packageApp: false
      buildForSimulator: true

- job: Tests
  pool:
    vmImage: 'macOS 10.13'

  steps:
  - task: NuGetToolInstaller@0

  - task: NuGetCommand@2
    inputs:
      restoreSolution: '**/*.sln'

  - task: DotNetCoreCLI@2
    inputs:
      command: test
      projects: '**/*Tests/*.csproj'
      arguments: '--configuration $(buildConfiguration)'

  - task: ShellScript@2
    inputs:
      scriptPath: Mobile.App.Tests/Scripts/MacOsRunner.sh

  - task: PublishCodeCoverageResults@1
    inputs:
      codeCoverageTool: cobertura
      summaryFileLocation: $(Build.SourcesDirectory)/Mobile.App.Tests/CodeCoverageResults/results.cobertura.xml
      reportDirectory: $(Build.SourcesDirectory)/Mobile.App.Tests/CodeCoverageResults/

  - task: PublishBuildArtifacts@1

